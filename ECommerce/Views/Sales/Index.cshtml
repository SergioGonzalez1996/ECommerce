@model PagedList.IPagedList<ECommerce.Models.Sale>
@using PagedList.Mvc;

@{
    ViewBag.Title = "Sales";
}

<h2>Sales</h2>

<p>
    @Html.ActionLink("Create New", "Create", new { }, new { @class = "btn btn-primary" })
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().Customer.FullName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().OrderId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().State.Description)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().Warehouse.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().Date)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().Remarks)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Customer.FullName)
        </td>
        <td>
            @if (!Html.DisplayFor(modelItem => item.OrderId).ToString().Equals("0"))
            {
                @Html.DisplayFor(modelItem => item.OrderId)
            }
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.State.Description)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Warehouse.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Date)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Remarks)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id = item.SaleId }, new { @class = "btn btn-warning" }) 
            @Html.ActionLink("Details", "Details", new { id = item.SaleId }, new { @class = "btn btn-info" }) 
            @Html.ActionLink("Delete", "Delete", new { id=item.SaleId }, new { @class = "btn btn-danger" })
        </td>
    </tr>
}

</table>

Page: @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber), of: @Model.PageCount
@Html.PagedListPager(Model, page => Url.Action("Index", new
{
    page,
    sortOrder =
    ViewBag.CurrentSort,
    currentFilter = ViewBag.CurrentFilter
}))